// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AccessGranted extends ethereum.Event {
  get params(): AccessGranted__Params {
    return new AccessGranted__Params(this);
  }
}

export class AccessGranted__Params {
  _event: AccessGranted;

  constructor(event: AccessGranted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get resourceId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get grantee(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AccessRevoked extends ethereum.Event {
  get params(): AccessRevoked__Params {
    return new AccessRevoked__Params(this);
  }
}

export class AccessRevoked__Params {
  _event: AccessRevoked;

  constructor(event: AccessRevoked) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get resourceId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get revokee(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ChainBalanceUpdated extends ethereum.Event {
  get params(): ChainBalanceUpdated__Params {
    return new ChainBalanceUpdated__Params(this);
  }
}

export class ChainBalanceUpdated__Params {
  _event: ChainBalanceUpdated;

  constructor(event: ChainBalanceUpdated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get walletId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get chainType(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get newBalance(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CrossChainOperationCompleted extends ethereum.Event {
  get params(): CrossChainOperationCompleted__Params {
    return new CrossChainOperationCompleted__Params(this);
  }
}

export class CrossChainOperationCompleted__Params {
  _event: CrossChainOperationCompleted;

  constructor(event: CrossChainOperationCompleted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operationId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get success(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class CrossChainOperationStarted extends ethereum.Event {
  get params(): CrossChainOperationStarted__Params {
    return new CrossChainOperationStarted__Params(this);
  }
}

export class CrossChainOperationStarted__Params {
  _event: CrossChainOperationStarted;

  constructor(event: CrossChainOperationStarted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operationId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get sourceChain(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get targetChain(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class DeviceAuthorized extends ethereum.Event {
  get params(): DeviceAuthorized__Params {
    return new DeviceAuthorized__Params(this);
  }
}

export class DeviceAuthorized__Params {
  _event: DeviceAuthorized;

  constructor(event: DeviceAuthorized) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get deviceId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get deviceAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class DeviceRegistered extends ethereum.Event {
  get params(): DeviceRegistered__Params {
    return new DeviceRegistered__Params(this);
  }
}

export class DeviceRegistered__Params {
  _event: DeviceRegistered;

  constructor(event: DeviceRegistered) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get deviceId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get deviceName(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class DeviceRevoked extends ethereum.Event {
  get params(): DeviceRevoked__Params {
    return new DeviceRevoked__Params(this);
  }
}

export class DeviceRevoked__Params {
  _event: DeviceRevoked;

  constructor(event: DeviceRevoked) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get deviceId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EmergencyShutdown extends ethereum.Event {
  get params(): EmergencyShutdown__Params {
    return new EmergencyShutdown__Params(this);
  }
}

export class EmergencyShutdown__Params {
  _event: EmergencyShutdown;

  constructor(event: EmergencyShutdown) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reason(): string {
    return this._event.parameters[1].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class GenericVaultEvent extends ethereum.Event {
  get params(): GenericVaultEvent__Params {
    return new GenericVaultEvent__Params(this);
  }
}

export class GenericVaultEvent__Params {
  _event: GenericVaultEvent;

  constructor(event: GenericVaultEvent) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get eventType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get data(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class GuardianAdded extends ethereum.Event {
  get params(): GuardianAdded__Params {
    return new GuardianAdded__Params(this);
  }
}

export class GuardianAdded__Params {
  _event: GuardianAdded;

  constructor(event: GuardianAdded) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get guardian(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class GuardianApproved extends ethereum.Event {
  get params(): GuardianApproved__Params {
    return new GuardianApproved__Params(this);
  }
}

export class GuardianApproved__Params {
  _event: GuardianApproved;

  constructor(event: GuardianApproved) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recoveryId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get guardian(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class GuardianRemoved extends ethereum.Event {
  get params(): GuardianRemoved__Params {
    return new GuardianRemoved__Params(this);
  }
}

export class GuardianRemoved__Params {
  _event: GuardianRemoved;

  constructor(event: GuardianRemoved) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get guardian(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RecoveryCompleted extends ethereum.Event {
  get params(): RecoveryCompleted__Params {
    return new RecoveryCompleted__Params(this);
  }
}

export class RecoveryCompleted__Params {
  _event: RecoveryCompleted;

  constructor(event: RecoveryCompleted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recoveryId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RecoveryInitiated extends ethereum.Event {
  get params(): RecoveryInitiated__Params {
    return new RecoveryInitiated__Params(this);
  }
}

export class RecoveryInitiated__Params {
  _event: RecoveryInitiated;

  constructor(event: RecoveryInitiated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recoveryId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get threshold(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RecoveryShareCreated extends ethereum.Event {
  get params(): RecoveryShareCreated__Params {
    return new RecoveryShareCreated__Params(this);
  }
}

export class RecoveryShareCreated__Params {
  _event: RecoveryShareCreated;

  constructor(event: RecoveryShareCreated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shareId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get threshold(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SecurityAlert extends ethereum.Event {
  get params(): SecurityAlert__Params {
    return new SecurityAlert__Params(this);
  }
}

export class SecurityAlert__Params {
  _event: SecurityAlert;

  constructor(event: SecurityAlert) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get alertType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get description(): string {
    return this._event.parameters[2].value.toString();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class SystemHealthCheck extends ethereum.Event {
  get params(): SystemHealthCheck__Params {
    return new SystemHealthCheck__Params(this);
  }
}

export class SystemHealthCheck__Params {
  _event: SystemHealthCheck;

  constructor(event: SystemHealthCheck) {
    this._event = event;
  }

  get timestamp(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get healthy(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get details(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class SystemRecovery extends ethereum.Event {
  get params(): SystemRecovery__Params {
    return new SystemRecovery__Params(this);
  }
}

export class SystemRecovery__Params {
  _event: SystemRecovery;

  constructor(event: SystemRecovery) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TransactionSigned extends ethereum.Event {
  get params(): TransactionSigned__Params {
    return new TransactionSigned__Params(this);
  }
}

export class TransactionSigned__Params {
  _event: TransactionSigned;

  constructor(event: TransactionSigned) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get walletId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get txHash(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get chainType(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class UnauthorizedAccess extends ethereum.Event {
  get params(): UnauthorizedAccess__Params {
    return new UnauthorizedAccess__Params(this);
  }
}

export class UnauthorizedAccess__Params {
  _event: UnauthorizedAccess;

  constructor(event: UnauthorizedAccess) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get unauthorized(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get resource(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class UserFlowEvent extends ethereum.Event {
  get params(): UserFlowEvent__Params {
    return new UserFlowEvent__Params(this);
  }
}

export class UserFlowEvent__Params {
  _event: UserFlowEvent;

  constructor(event: UserFlowEvent) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get flowType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get step(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get success(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get data(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class RecoveryManager__getRecoveryRequestResult {
  value0: Address;
  value1: i32;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: Address,
    value1: i32,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getUser(): Address {
    return this.value0;
  }

  getStatus(): i32 {
    return this.value1;
  }

  getCurrentApprovals(): BigInt {
    return this.value2;
  }

  getRequiredApprovals(): BigInt {
    return this.value3;
  }

  getExpiresAt(): BigInt {
    return this.value4;
  }
}

export class RecoveryManager__getUserGuardiansResultGuardiansStruct extends ethereum.Tuple {
  get guardianAddress(): Address {
    return this[0].toAddress();
  }

  get name(): string {
    return this[1].toString();
  }

  get contactHash(): Bytes {
    return this[2].toBytes();
  }

  get isActive(): boolean {
    return this[3].toBoolean();
  }

  get addedAt(): BigInt {
    return this[4].toBigInt();
  }

  get lastVerified(): BigInt {
    return this[5].toBigInt();
  }
}

export class RecoveryManager__reconstructFromSharesResult {
  value0: boolean;
  value1: Bytes;

  constructor(value0: boolean, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }

  getSuccess(): boolean {
    return this.value0;
  }

  getReconstructedData(): Bytes {
    return this.value1;
  }
}

export class RecoveryManager extends ethereum.SmartContract {
  static bind(address: Address): RecoveryManager {
    return new RecoveryManager("RecoveryManager", address);
  }

  createRecoveryShares(
    threshold: BigInt,
    shareData: Array<Bytes>,
  ): Array<Bytes> {
    let result = super.call(
      "createRecoveryShares",
      "createRecoveryShares(uint256,bytes[]):(bytes32[])",
      [
        ethereum.Value.fromUnsignedBigInt(threshold),
        ethereum.Value.fromBytesArray(shareData),
      ],
    );

    return result[0].toBytesArray();
  }

  try_createRecoveryShares(
    threshold: BigInt,
    shareData: Array<Bytes>,
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "createRecoveryShares",
      "createRecoveryShares(uint256,bytes[]):(bytes32[])",
      [
        ethereum.Value.fromUnsignedBigInt(threshold),
        ethereum.Value.fromBytesArray(shareData),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  defaultRecoveryPeriod(): BigInt {
    let result = super.call(
      "defaultRecoveryPeriod",
      "defaultRecoveryPeriod():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_defaultRecoveryPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "defaultRecoveryPeriod",
      "defaultRecoveryPeriod():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRecoveryRequest(
    recoveryId: Bytes,
  ): RecoveryManager__getRecoveryRequestResult {
    let result = super.call(
      "getRecoveryRequest",
      "getRecoveryRequest(bytes32):(address,uint8,uint256,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(recoveryId)],
    );

    return new RecoveryManager__getRecoveryRequestResult(
      result[0].toAddress(),
      result[1].toI32(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
    );
  }

  try_getRecoveryRequest(
    recoveryId: Bytes,
  ): ethereum.CallResult<RecoveryManager__getRecoveryRequestResult> {
    let result = super.tryCall(
      "getRecoveryRequest",
      "getRecoveryRequest(bytes32):(address,uint8,uint256,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(recoveryId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RecoveryManager__getRecoveryRequestResult(
        value[0].toAddress(),
        value[1].toI32(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
      ),
    );
  }

  getUserGuardians(
    user: Address,
  ): Array<RecoveryManager__getUserGuardiansResultGuardiansStruct> {
    let result = super.call(
      "getUserGuardians",
      "getUserGuardians(address):((address,string,bytes32,bool,uint256,uint256)[])",
      [ethereum.Value.fromAddress(user)],
    );

    return result[0].toTupleArray<RecoveryManager__getUserGuardiansResultGuardiansStruct>();
  }

  try_getUserGuardians(
    user: Address,
  ): ethereum.CallResult<
    Array<RecoveryManager__getUserGuardiansResultGuardiansStruct>
  > {
    let result = super.tryCall(
      "getUserGuardians",
      "getUserGuardians(address):((address,string,bytes32,bool,uint256,uint256)[])",
      [ethereum.Value.fromAddress(user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<RecoveryManager__getUserGuardiansResultGuardiansStruct>(),
    );
  }

  getUserRecoveryRequests(user: Address): Array<Bytes> {
    let result = super.call(
      "getUserRecoveryRequests",
      "getUserRecoveryRequests(address):(bytes32[])",
      [ethereum.Value.fromAddress(user)],
    );

    return result[0].toBytesArray();
  }

  try_getUserRecoveryRequests(
    user: Address,
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getUserRecoveryRequests",
      "getUserRecoveryRequests(address):(bytes32[])",
      [ethereum.Value.fromAddress(user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  initiateRecovery(threshold: BigInt, encryptedRecoveryData: Bytes): Bytes {
    let result = super.call(
      "initiateRecovery",
      "initiateRecovery(uint256,bytes):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(threshold),
        ethereum.Value.fromBytes(encryptedRecoveryData),
      ],
    );

    return result[0].toBytes();
  }

  try_initiateRecovery(
    threshold: BigInt,
    encryptedRecoveryData: Bytes,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "initiateRecovery",
      "initiateRecovery(uint256,bytes):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(threshold),
        ethereum.Value.fromBytes(encryptedRecoveryData),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isPaused(): boolean {
    let result = super.call("isPaused", "isPaused():(bool)", []);

    return result[0].toBoolean();
  }

  try_isPaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPaused", "isPaused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxGuardians(): BigInt {
    let result = super.call("maxGuardians", "maxGuardians():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxGuardians(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxGuardians", "maxGuardians():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minGuardians(): BigInt {
    let result = super.call("minGuardians", "minGuardians():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minGuardians(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minGuardians", "minGuardians():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minThreshold(): BigInt {
    let result = super.call("minThreshold", "minThreshold():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minThreshold", "minThreshold():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reconstructFromShares(
    shareIds: Array<Bytes>,
    shareProofs: Array<Bytes>,
  ): RecoveryManager__reconstructFromSharesResult {
    let result = super.call(
      "reconstructFromShares",
      "reconstructFromShares(bytes32[],bytes[]):(bool,bytes)",
      [
        ethereum.Value.fromFixedBytesArray(shareIds),
        ethereum.Value.fromBytesArray(shareProofs),
      ],
    );

    return new RecoveryManager__reconstructFromSharesResult(
      result[0].toBoolean(),
      result[1].toBytes(),
    );
  }

  try_reconstructFromShares(
    shareIds: Array<Bytes>,
    shareProofs: Array<Bytes>,
  ): ethereum.CallResult<RecoveryManager__reconstructFromSharesResult> {
    let result = super.tryCall(
      "reconstructFromShares",
      "reconstructFromShares(bytes32[],bytes[]):(bool,bytes)",
      [
        ethereum.Value.fromFixedBytesArray(shareIds),
        ethereum.Value.fromBytesArray(shareProofs),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RecoveryManager__reconstructFromSharesResult(
        value[0].toBoolean(),
        value[1].toBytes(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddGuardianCall extends ethereum.Call {
  get inputs(): AddGuardianCall__Inputs {
    return new AddGuardianCall__Inputs(this);
  }

  get outputs(): AddGuardianCall__Outputs {
    return new AddGuardianCall__Outputs(this);
  }
}

export class AddGuardianCall__Inputs {
  _call: AddGuardianCall;

  constructor(call: AddGuardianCall) {
    this._call = call;
  }

  get guardianAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get contactHash(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class AddGuardianCall__Outputs {
  _call: AddGuardianCall;

  constructor(call: AddGuardianCall) {
    this._call = call;
  }
}

export class ApproveRecoveryCall extends ethereum.Call {
  get inputs(): ApproveRecoveryCall__Inputs {
    return new ApproveRecoveryCall__Inputs(this);
  }

  get outputs(): ApproveRecoveryCall__Outputs {
    return new ApproveRecoveryCall__Outputs(this);
  }
}

export class ApproveRecoveryCall__Inputs {
  _call: ApproveRecoveryCall;

  constructor(call: ApproveRecoveryCall) {
    this._call = call;
  }

  get recoveryId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ApproveRecoveryCall__Outputs {
  _call: ApproveRecoveryCall;

  constructor(call: ApproveRecoveryCall) {
    this._call = call;
  }
}

export class CancelRecoveryCall extends ethereum.Call {
  get inputs(): CancelRecoveryCall__Inputs {
    return new CancelRecoveryCall__Inputs(this);
  }

  get outputs(): CancelRecoveryCall__Outputs {
    return new CancelRecoveryCall__Outputs(this);
  }
}

export class CancelRecoveryCall__Inputs {
  _call: CancelRecoveryCall;

  constructor(call: CancelRecoveryCall) {
    this._call = call;
  }

  get recoveryId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CancelRecoveryCall__Outputs {
  _call: CancelRecoveryCall;

  constructor(call: CancelRecoveryCall) {
    this._call = call;
  }
}

export class CreateRecoverySharesCall extends ethereum.Call {
  get inputs(): CreateRecoverySharesCall__Inputs {
    return new CreateRecoverySharesCall__Inputs(this);
  }

  get outputs(): CreateRecoverySharesCall__Outputs {
    return new CreateRecoverySharesCall__Outputs(this);
  }
}

export class CreateRecoverySharesCall__Inputs {
  _call: CreateRecoverySharesCall;

  constructor(call: CreateRecoverySharesCall) {
    this._call = call;
  }

  get threshold(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get shareData(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }
}

export class CreateRecoverySharesCall__Outputs {
  _call: CreateRecoverySharesCall;

  constructor(call: CreateRecoverySharesCall) {
    this._call = call;
  }

  get shareIds(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class EmergencyRecoveryCall extends ethereum.Call {
  get inputs(): EmergencyRecoveryCall__Inputs {
    return new EmergencyRecoveryCall__Inputs(this);
  }

  get outputs(): EmergencyRecoveryCall__Outputs {
    return new EmergencyRecoveryCall__Outputs(this);
  }
}

export class EmergencyRecoveryCall__Inputs {
  _call: EmergencyRecoveryCall;

  constructor(call: EmergencyRecoveryCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get reason(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class EmergencyRecoveryCall__Outputs {
  _call: EmergencyRecoveryCall;

  constructor(call: EmergencyRecoveryCall) {
    this._call = call;
  }
}

export class EmitUserFlowEventCall extends ethereum.Call {
  get inputs(): EmitUserFlowEventCall__Inputs {
    return new EmitUserFlowEventCall__Inputs(this);
  }

  get outputs(): EmitUserFlowEventCall__Outputs {
    return new EmitUserFlowEventCall__Outputs(this);
  }
}

export class EmitUserFlowEventCall__Inputs {
  _call: EmitUserFlowEventCall;

  constructor(call: EmitUserFlowEventCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get flowType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get step(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get success(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class EmitUserFlowEventCall__Outputs {
  _call: EmitUserFlowEventCall;

  constructor(call: EmitUserFlowEventCall) {
    this._call = call;
  }
}

export class EmitVaultEventCall extends ethereum.Call {
  get inputs(): EmitVaultEventCall__Inputs {
    return new EmitVaultEventCall__Inputs(this);
  }

  get outputs(): EmitVaultEventCall__Outputs {
    return new EmitVaultEventCall__Outputs(this);
  }
}

export class EmitVaultEventCall__Inputs {
  _call: EmitVaultEventCall;

  constructor(call: EmitVaultEventCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get eventType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class EmitVaultEventCall__Outputs {
  _call: EmitVaultEventCall;

  constructor(call: EmitVaultEventCall) {
    this._call = call;
  }
}

export class InitiateRecoveryCall extends ethereum.Call {
  get inputs(): InitiateRecoveryCall__Inputs {
    return new InitiateRecoveryCall__Inputs(this);
  }

  get outputs(): InitiateRecoveryCall__Outputs {
    return new InitiateRecoveryCall__Outputs(this);
  }
}

export class InitiateRecoveryCall__Inputs {
  _call: InitiateRecoveryCall;

  constructor(call: InitiateRecoveryCall) {
    this._call = call;
  }

  get threshold(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get encryptedRecoveryData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class InitiateRecoveryCall__Outputs {
  _call: InitiateRecoveryCall;

  constructor(call: InitiateRecoveryCall) {
    this._call = call;
  }

  get recoveryId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveGuardianCall extends ethereum.Call {
  get inputs(): RemoveGuardianCall__Inputs {
    return new RemoveGuardianCall__Inputs(this);
  }

  get outputs(): RemoveGuardianCall__Outputs {
    return new RemoveGuardianCall__Outputs(this);
  }
}

export class RemoveGuardianCall__Inputs {
  _call: RemoveGuardianCall;

  constructor(call: RemoveGuardianCall) {
    this._call = call;
  }

  get guardianAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveGuardianCall__Outputs {
  _call: RemoveGuardianCall;

  constructor(call: RemoveGuardianCall) {
    this._call = call;
  }
}

export class SetGuardianLimitsCall extends ethereum.Call {
  get inputs(): SetGuardianLimitsCall__Inputs {
    return new SetGuardianLimitsCall__Inputs(this);
  }

  get outputs(): SetGuardianLimitsCall__Outputs {
    return new SetGuardianLimitsCall__Outputs(this);
  }
}

export class SetGuardianLimitsCall__Inputs {
  _call: SetGuardianLimitsCall;

  constructor(call: SetGuardianLimitsCall) {
    this._call = call;
  }

  get minGuard(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get maxGuard(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetGuardianLimitsCall__Outputs {
  _call: SetGuardianLimitsCall;

  constructor(call: SetGuardianLimitsCall) {
    this._call = call;
  }
}

export class SetRecoveryPeriodCall extends ethereum.Call {
  get inputs(): SetRecoveryPeriodCall__Inputs {
    return new SetRecoveryPeriodCall__Inputs(this);
  }

  get outputs(): SetRecoveryPeriodCall__Outputs {
    return new SetRecoveryPeriodCall__Outputs(this);
  }
}

export class SetRecoveryPeriodCall__Inputs {
  _call: SetRecoveryPeriodCall;

  constructor(call: SetRecoveryPeriodCall) {
    this._call = call;
  }

  get period(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetRecoveryPeriodCall__Outputs {
  _call: SetRecoveryPeriodCall;

  constructor(call: SetRecoveryPeriodCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
